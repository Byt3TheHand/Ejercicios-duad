
**Ejercicios Extra**

1. Cree un diagrama de flujo que le pida 5 números al usuario y muestre el mayor.
    1. *Ejemplos*:
        1. 4, 76, 43, 6, 8 → 76
        2. 1, 2, 3, 6, 7 → 7
        3. 2132, 4355, 1132, 2323, 1214 → 4355
2. Cree un diagrama de flujo que le pida un numero al usuario y muestre “*Fizz*” si es divisible entre 3, “*Buzz*” si es divisible entre 5, y “*FizzBuzz*” si es divisible entre ambos.
    1. *Ejemplos*:
        1. 33 → Fizz
        2. 25 → Buzz
        3. 30 → FizzBuzz
3. Cree un diagrama de flujo que le pida 100 números al usuario y muestre la suma de todos.
4. Cree un diagrama de flujo que le pida 100 números al usuario y muestre el mayor de todos.
    1. *Ejemplos*:
        1. 4, 76, 43, 6, 8 → 76
        


Extra 1

1. Inicio
2. Definir `Lista_numeros` como lista vacía
3. Definir `contador_ingresos` 
4. Definir `maximo_ingresos`
5. `contador_ingresos` = 0
6. `maximo_ingresos` = 5
7. Mientras que (`contador_ingresos`  ≠ `maximo_ingresos` ) repetir:
    1. Mostrar “ Ingrese su numero (“, `contador_ingresos` + 1, “/”, `maximo_ingresos`, “)”
    2. Pedir `numero`
    3. Agregar `numero` a `Lista_numeros` 
    4. `contador_ingresos` = `contador_ingresos` + 1
8. FinMientras

Fin

//  aca tenia una duda, no de como hacer la lógica, pero sino de como expresar que en cada vuelta del loop, los números preguntados se fueran guardando en una variable diferente, chatgpt me sugerio explorar el concepto de listas //  

Nuevo Pseudo Código explorando listados

1. Inicio
2. Definir `Lista_numeros` como lista vacía
3. Definir `contador_ingresos` 
4. Definir `maximo_ingresos`
5. `contador_ingresos` = 0
6. `maximo_ingresos` = 5
7. Mientras que (`contador_ingresos` ≠ `maximo_ingresos`) repetir:
5.1 Mostrar "Ingrese su número (", `contador_ingresos` + 1, "/", `maximo_ingresos`, ")"
5.2 Pedir `numero`
5.3 Agregar `numero` a `lista_numeros`
5.4 `contador_ingresos`  = `contador_ingresos` + 1
8. FinMientras
9. Definir `mayor` = `lista_numeros[0]` // Suponemos que el primer número es el mayor
10. Para `i` desde 1 hasta 4 hacer:
8.1 Si (`lista_numeros[i`] > `mayor`) entonces:
8.1.1 `mayor` = `lista_numeros[i]`
8.2 FinSi
11. FinPara
12. Mostrar "El número mayor es:", `mayor`
13. Fin